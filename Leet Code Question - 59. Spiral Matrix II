Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20


class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>>arr(n,vector<int> (n));

        int count = 1;
        int row = n;
        int col = n;
        int total = row * col;

        int startingRow = 0;
        int startingCol = 0;
        int endingCol = n-1;
        int endingRow = n-1;

        while(count <= total){
            //starting row
            for(int index = startingCol; count <= total && index <= endingCol; index++){
                arr[startingRow][index] = count;
                count++;
            }
            startingRow++;

            // ending col;
            for(int index = startingRow; count <= total &&  index <= endingRow; index++){
                arr[index][endingCol] = count;
                count++;
            }
            endingCol--;

            // endingRow
            for(int index = endingCol; count <= total && index >= startingCol; index--){
                arr[endingRow][index] = count;
                count++;
            }
            endingRow--;
            // staring col
            for(int index = endingRow; count <= total && index >= startingRow; index--){
                arr[index][startingCol] = count;
                count++;
            }
            startingCol++;
        }
        return arr;
    }
};
