class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = firstOcc(nums, target);
        int second = lastOcc(nums, target);
        return {first, second};
    }

    int firstOcc(vector<int>&nums, int key){
    int s = 0;
    int e = nums.size()-1;
    int mid = s + (e-s)/2;
    int ans = -1;
    while(s <= e){
        if(nums[mid] == key){
            ans = mid;
            e = mid-1;
        }
        else if(nums[mid] < key){
            s = mid + 1;
        }
        else{
            e = mid - 1;
        }
        mid = s + (e-s)/2;
    }
    return ans;
}

int lastOcc(vector<int>&nums, int key){
    int s = 0;
    int e = nums.size()-1;
    int mid = s + (e-s)/2;
    int ans = -1;
    while(s <= e){
        if(nums[mid] == key){
            ans = mid;
            s = mid+1;
        }
        else if(nums[mid] < key){
            s = mid + 1;
        }
        else{
            e = mid - 1;
        }
        mid = s + (e-s)/2;
    }
    return ans;
}

};
